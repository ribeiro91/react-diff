{"version":3,"sources":["component/errorBanner.jsx","component/home.jsx","component/report.jsx","App.js","index.js"],"names":["ErrorBanner","props","console","info","isValidated","isValid","className","errorMessage","Home","state","source","changed","handleSubmit","bind","handleChange","event","this","setState","target","name","value","preventDefault","trim","length","prettydiff","require","options","diff","diff_space_ignore","diff_format","mode","output","handleReport","history","push","onSubmit","cols","rows","onChange","type","Component","Report","reportData","JSON","parse","map","data","index","key","rowNumber","GenerateDOM","eachRowData","sourceValue","destinationValue","sourceClass","destinationClass","eachRowValue","getEachRowValue","App","isRedirected","basename","process","exact","path","render","to","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.37e4e54b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ErrorBanner = props => {\n  console.info(props);\n  if (!props.isValidated && !props.isValid) return null;\n  if (!props.isValid && props.isValidated)\n    return <div className=\"alert alert-danger\">{props.errorMessage}</div>;\n};\n\nexport default ErrorBanner;\n","import React, { Component } from \"react\";\nimport ErrorBanner from \"./errorBanner\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      source: \"\",\n      changed: \"\",\n      isValidated: false,\n      isValid: false,\n      errorMessage: \"\"\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      isValidated: true\n    });\n\n    if (!this.state.source.trim().length > 0) {\n      this.setState({\n        isValid: false,\n        errorMessage: \"Please enter a Original code\"\n      });\n      return;\n    }\n\n    if (!this.state.changed.trim().length > 0) {\n      this.setState({\n        isValid: false,\n        errorMessage: \"Please enter a Changed code\"\n      });\n      return;\n    }\n\n    let prettydiff = require(\"prettydiff\");\n\n    let options = {\n      diff: this.state.changed,\n      diff_space_ignore: true,\n      diff_format: \"json\",\n      mode: \"diff\",\n      source: this.state.source\n    };\n\n    prettydiff.options = { ...prettydiff.options, ...options };\n\n    let output = prettydiff();\n    this.props.handleReport(output);\n    this.props.history.push(\"/report\");\n  }\n\n  render() {\n    return (\n      <div className=\"App w-15\">\n        <div className=\"container\">\n          <ErrorBanner\n            isValidated={this.state.isValidated}\n            errorMessage={this.state.errorMessage}\n            isValid={this.state.isValid}\n          />\n          <form onSubmit={this.handleSubmit.bind(this)}>\n            <div className=\"row\">\n              <div className=\"leftWrapper col-6\">\n                <label>\n                  <h4 className=\"text-uppercase\">Original Code</h4>\n                </label>\n                <textarea\n                  name=\"source\"\n                  cols=\"30\"\n                  rows=\"20\"\n                  className=\"w-100\"\n                  value={this.state.source}\n                  onChange={event => {\n                    this.handleChange(event);\n                  }}\n                ></textarea>\n              </div>\n              <div className=\"rightWrapper col-6\">\n                <label>\n                  <h4 className=\"text-uppercase\">Changed Code</h4>\n                </label>\n                <textarea\n                  name=\"changed\"\n                  cols=\"30\"\n                  rows=\"20\"\n                  className=\"w-100\"\n                  value={this.state.changed}\n                  onChange={event => {\n                    this.handleChange(event);\n                  }}\n                ></textarea>\n              </div>\n            </div>\n            <input\n              type=\"submit\"\n              value=\"Compare\"\n              className=\"btn btn-info mt-3\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nclass Report extends Component {\n  render() {\n    //console.info(this.props.reportData);\n    //const jsonFeed = { diff: [[\"=\", \"test\"]] };\n    /* const jsonFeed = {\n      diff: [\n        [\"=\", \"test\"],\n        [\"r\", \"test2\", \"test3\"],\n        [\"r\", \"\", \"test4\"]\n      ]\n    }; \n\n    const jsonFeed = {\n      diff: [\n        [\"=\", \"test\"],\n        [\"-\", \"test1\"],\n        [\"=\", \"test2\"],\n        [\"=\", \"test3\"],\n        [\"+\", \"test4\"],\n        [\"r\", \"test2\", \"test3\"]\n      ]\n    };*/\n    const jsonFeed = JSON.parse(this.props.reportData);\n    const reportData = jsonFeed.diff;\n\n    return (\n      <div className=\"container\">\n        <h1>Report</h1>\n        <ul>\n          <li className=\"d-flex f-0 flex-align-center\">\n            <div className=\"f-15 sourceWrapper\">\n              <h4 className=\"text-uppercase\">Original Code</h4>\n            </div>\n            <div className=\"rowNumber f-15\"></div>\n            <div className=\"f-15 destinationWrapper\">\n              <h4 className=\"text-uppercase\">Changed Code</h4>\n            </div>\n          </li>\n          {reportData.map(\n            (data, index) => (\n              //data.map((item, i) => (\n              <GenerateDOM key={index + 1} data={data} rowNumber={index + 1} />\n            )\n            //))\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nclass GenerateDOM extends Component {\n  getEachRowValue(data) {\n    console.info(data);\n    let eachRowData = {};\n    if (data[0] === \"=\") {\n      eachRowData.sourceValue = eachRowData.destinationValue = data[1];\n      eachRowData.sourceClass = eachRowData.destinationClass = \"alert-light\";\n    } else if (data[0] === \"r\") {\n      eachRowData.sourceValue = data[1];\n      eachRowData.destinationValue = data[2];\n      eachRowData.sourceClass = eachRowData.destinationClass = \"alert-warning\";\n    } else if (data[0] === \"-\") {\n      eachRowData.sourceValue = \"\";\n      eachRowData.destinationValue = data[1];\n      eachRowData.sourceClass = \"alert-danger\";\n      eachRowData.destinationClass = \"alert-success\";\n    } else {\n      eachRowData.sourceValue = data[1];\n      eachRowData.destinationValue = \"\";\n      eachRowData.sourceClass = \"alert-success\";\n      eachRowData.destinationClass = \"alert-danger\";\n    }\n\n    return eachRowData;\n  }\n\n  render() {\n    let eachRowValue = this.getEachRowValue(this.props.data);\n    return (\n      <li className=\"d-flex f-0 flex-align-center\">\n        <div\n          className={\n            \"alert \" + eachRowValue.sourceClass + \" f-15 sourceWrapper\"\n          }\n        >\n          {eachRowValue.sourceValue}\n        </div>\n        <div className=\"rowNumber f-15\">{this.props.rowNumber}</div>\n        <div\n          className={\n            \"alert \" +\n            eachRowValue.destinationClass +\n            \" f-15 destinationWrapper\"\n          }\n        >\n          {eachRowValue.destinationValue}\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default Report;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./component/home\";\nimport Report from \"./component/report\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isRedirected: false,\n      reportData: \"\"\n    };\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleReport(data) {\n    this.setState({\n      isRedirected: true,\n      reportData: data\n    });\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route\n              exact\n              path={\"/\"}\n              render={props => (\n                <Home {...props} handleReport={this.handleReport} />\n              )}\n            ></Route>\n            <Route\n              exact\n              path={\"/report\"}\n              render={props =>\n                this.state.isRedirected ? (\n                  <Report {...props} reportData={this.state.reportData} />\n                ) : (\n                  <Redirect to=\"/\" />\n                )\n              }\n              /* render={props => (\n                <Report {...props} reportData={this.state.reportData} />\n              )} */\n            ></Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}